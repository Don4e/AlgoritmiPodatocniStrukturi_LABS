import java.util.Scanner;
/*Дадени се N точки (N>=2) во дводимензионален простор. Пресметајте кое е најмалото растојание помеѓу две точки.

        Влез: Во првиот ред од влезот е даден бројот на точки (N). Потоа, во следните N редови влез, се дадени координатите на секоја точка.

        Излез: На излез треба да се испечати минималното растојание помеѓу две точки.

        For example:

        Input
        3
        0 1
        0 6
        0 3

        Result
        2.0*/
public class MinDistance {

    public static float minimalDistance(float points[][]) {
        //na pocetok minimalnoto rastojanie e megju tocka 0 i tocka 1
        double minDis = Math.sqrt((points[0][0]-points[1][0])*(points[0][0]-points[1][0])+(points[0][1]-points[1][1])*(points[0][1]-points[1][1]));
        double currDistance;
        for(int i=0;i<points.length-1;i++){
            for(int j=i+1;j<points.length;j++){
                //presmetuvame rastojanie megju sekoja tocka
                currDistance=Math.sqrt((points[i][0]-points[j][0])*(points[i][0]-points[j][0])+(points[i][1]-points[j][1])*(points[i][1]-points[j][1]));
                if(currDistance<minDis){   //ako rastojanie megju momentalni tocki e pomalo od minDistance, minDistance=currentDistance
                    minDis=currDistance;
                }
            }
        }
        return (float) minDis;
    }

    public static void main(String [] args) {
        Scanner input = new Scanner(System.in);

        int N = input.nextInt();

        float points[][] = new float[N][2];

        for(int i=0;i<N;i++) {
            points[i][0] = input.nextFloat();
            points[i][1] = input.nextFloat();
        }

        System.out.printf("%.2f\n", minimalDistance(points));
    }
}
